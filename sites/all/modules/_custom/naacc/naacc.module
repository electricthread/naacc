<?php
/**
 * @file
 * Module for defining random custom Seed Company hooks
 */

/**
 * Implements hook_menu().
 */
function naacc_menu() {
  $items['home'] = array(
    'title' => 'Home',
    'page callback' => 'get_homepage',
    'access arguments' => array('access content'),
    'type' => MENU_SUGGESTED_ITEM,
  );

  return $items;
}

function get_homepage()
{
  return '';
}

/**
 * Implements hook_form_alter().
 */
function naacc_form_alter(&$form, &$form_state, $form_id) {
  // Mailchimp - Set First Name and Last Name fields to be required.
  // if (!empty($form_state['build_info']['base_form_id'])) {
  //   if ($form_state['build_info']['base_form_id'] == 'mailchimp_lists_user_subscribe_form') {
  //     foreach ($form['mailchimp_lists'] as $field_id => $field_content) {
  //       if (substr($field_id, 0, 9) == 'mailchimp') {
  //         $form['mailchimp_lists'][$field_id]['mergevars']['EMAIL']['#attributes']['placeholder'] = t('Email address');
  //       }
  //     }
  //   }
  // }
  // Constant Contact form
  if ($form_id == 'constant_contact_signup_form_1') {
    $form['cc_email_1']['#attributes']['placeholder'] = t('Email Address');
  }
  // Placeholders for exposed member form
  if ($form_id == 'views_exposed_form') {
    $form['combine']['#attributes']['placeholder'] = t('First or Last Name');
    $form['field_city_value']['#attributes']['placeholder'] = t('City Name');
    $form['field_state_value']['#options']['All'] = t("Any State");
    $form['field_specialties_value']['#options']['All'] = t("Any Specialty");
    // Only alter forms with City field
    $field_id = 'field_city';
    if (isset($form[$field_id .'_value'])) {
      // Build a query to get all node ids having the specified field
      $query = new EntityFieldQuery();
      $results = $query->entityCondition('entity_type', 'user')
                        ->fieldCondition($field_id, 'value', 'NULL', '!=')
                        ->fieldOrderBy($field_id, 'value', 'ASC')
                        ->execute();
      // Attach the field values to the users
      $users = $results['user'];
      field_attach_load('user', $users, FIELD_LOAD_CURRENT, array('field_id' => $field_id));
      // Add a default so the filter is optional
      $options = array('' => 'City Name');
      // Buld the options array based on the query results, overwriting duplicate entries
      foreach($users as $uid => $user) {
        $value = $user->field_city['und'][0]['value'];
        $options[$value] = $value;
      }
      // Alter the field
      $form[$field_id .'_value']['#type'] = 'select';
      $form[$field_id .'_value']['#options'] = $options;
      $form[$field_id .'_value']['#size'] = 1;
    }
  }
  // Commerce Product Form Alter
  if (commerce_form_callback($form_id, $form_state) == "commerce_cart_add_to_cart_form") {
    if (isset($form['line_item_fields']['field_donation_field'])) {
      $form['submit']['#attributes']['title'] = $form['submit']['#attributes']['value'] = t('Donate');
    }
  }
  // Checkout form
  if ($form_id == 'commerce_checkout_form_checkout') {
    $path = drupal_get_path('theme', 'naacc');
    drupal_add_css($path .'/assets/js/vendor/chosen_v1.1.0/chosen.min.css', array('group' => CSS_DEFAULT));
    drupal_add_js($path .'/assets/js/vendor/chosen_v1.1.0/chosen.jquery.min.js', array('group' => JS_LIBRARY));
    drupal_add_js($path .'/assets/js/checkout.js', array('group' => JS_THEME));
    $form['buttons']['continue']['#value'] = 'Submit Payment';

    // CONSTANT CONTACT JAZZ

    // $subscribe_method = variable_get('cc_register_page_method', CC_REGISTER_PAGE_METHOD);
    // $list_format = variable_get('cc_list_selection_format',CC_LIST_SELECTION_FORMAT);
    // $default_opt_in = variable_get('cc_default_opt_in', CC_DEFAULT_OPT_IN);
    // $show_format_choice = variable_get('cc_show_format_choice',CC_SHOW_FORMAT_CHOICE);
    // $default_subscribe_format = variable_get('cc_subscribe_format',CC_SUBSCRIBE_FORMAT);

    // if($subscribe_method == 'none'):
    //   return;
    // endif;

    // $cc = constant_contact_create_object();

    // if(!is_object($cc)):
    //   return;
    // endif;

    // $selected_lists = array();

    // if($subscribe_method == 'lists'):
    //   $show_lists = variable_get('cc_lists',array());

    //   $lists = constant_contact_get_lists($cc);

    //   // select all lists by default, if enabled
    //   if($lists && $default_opt_in):
    //   foreach($lists as $list_id => $list_name):
    //     $selected_lists[] = $list_id;
    //   endforeach;
    //   endif;

    //   $options = array();
    //       // if they have selected some lists to show build them otherwise show all lists
    //       if(count($show_lists) > 0):
    //           foreach($show_lists as $list_id):
    //               if(array_key_exists($list_id, $lists)):
    //                   $options[$list_id] = $lists[$list_id];
    //               endif;
    //           endforeach;
    //       else:
    //           // displaqy all lists
    //           $options = $lists;
    //       endif;


    //   if(count($options) > 0):
    //     if($list_format == 'select'):
    //       $field_type = 'select';
    //     else:
    //       $field_type = 'checkboxes';
    //     endif;

    //     $form['commerce_user_profile_pane']['cc_newsletter_lists'] = array(
    //       '#type' => $field_type,
    //       '#title' => variable_get('cc_signup_title', CC_SIGNUP_TITLE),
    //       '#description' => variable_get('cc_signup_description',CC_SIGNUP_DESCRIPTION),
    //       '#options' => $options,
    //       '#weight' => 11,
    //       '#default_value' => $selected_lists,
    //     );

    //     if($list_format == 'select'):
    //       $field_size = ($options && count($options)>25) ? 25 : count($options);
    //       $form['commerce_user_profile_pane']['cc_newsletter_lists']['#multiple'] = true;
    //       $form['commerce_user_profile_pane']['cc_newsletter_lists']['#size'] = $field_size;
    //     endif;
    //   endif;
    // else:
    //   $form['commerce_user_profile_pane']['cc_newsletter'] = array(
    //     '#type' => 'checkbox',
    //     '#title' => variable_get('cc_signup_title', CC_SIGNUP_TITLE),
    //     '#description' => variable_get('cc_signup_description',CC_SIGNUP_DESCRIPTION),
    //     '#weight' => 10,
    //     '#default_value' => $default_opt_in,
    //   );
    // endif;

    // if($show_format_choice):
    //   $form['commerce_user_profile_pane']['cc_email_format'] = array(
    //     '#type' => 'radios',
    //     '#title' => t('Email Format'),
    //     '#description' => 'You can receive emails in Text or HTML format',
    //     '#weight' => 12,
    //     '#default_value' => $default_subscribe_format,
    //     '#options' => ($default_subscribe_format == 'HTML') ? array('HTML' => t('HTML'), 'Text' => t('Text')) : array('Text' => t('Text'), 'HTML' => t('HTML')),
    //   );
    // endif;

    // return $form;
  }
  // User Profile Form
  if ($form_id == 'user_profile_form') {
    // Disable Memberships Purchased field (also hidden in CSS)
    $form['field_memberships_purchased_need']['und']['#attributes']['disabled'] = TRUE;
    $path = drupal_get_path('theme', 'naacc');
    drupal_add_css($path .'/assets/js/vendor/chosen_v1.1.0/chosen.min.css', array('group' => CSS_DEFAULT));
    drupal_add_js($path .'/assets/js/vendor/chosen_v1.1.0/chosen.jquery.min.js', array('group' => JS_LIBRARY));
    drupal_add_js($path .'/assets/js/user.js', array('group' => JS_THEME));
  }
}
